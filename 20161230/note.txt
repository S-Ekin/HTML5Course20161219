1.作用域
在函数内定义的变量不能从函数之外的任何地方取得，
变量仅仅在该函数的内容有定义。

2.作用域链
儿子没钱了找爸爸要，爸爸没钱了找爷爷要
爸爸没钱了不可以找儿子要，找儿子就报错了，因为儿子还小

指的是我们变量查找的一个规律：我们可以在不同的作用域
内使用相同的标识符去命名变量。我们在使用变量的时候，
需要找到匹配的标识符，我们有重复，用哪一个？如果当
前作用域有这个变量，就直接使用，当前作用域没有这个变量
定义，会一层一层的从本层往外依次查找，遇到第一个就直接
使用。类似于就近原则。

当遇到一个变量时，JS引擎会从其所在的作用域依次向外层查找，
查找会在找到第一个匹配的标识符时停止。在多层嵌套的作用域
中可以定义同名的标识符，发生“遮蔽效应”

3.函数的形参是局部变量
就是他定义的函数作用域内的局部变量

4.全局变量应用
传递：可以在多个函数之间进行通信。
全局变量，作为一个信号量，可以在不同的函数之间进行通信
多个函数都在控制一个变量

累加：全局变量的值，不会被重置、清空

全局变量，多次执行一个函数，变量值可以一直被保存

5.函数的作用域
函数和变量很相似，也有自己的作用域。函数也是只能在他
自己的作用域内才能被访问到

6.闭包
体验闭包

总结：inner函数把它自己的内部的语句，
和自己声明时所处的
作用域一起封装成一个密闭环境，我们称为“闭包”
(Closures)




